#!/bin/bash
#
# Author: bjpjones@fnal.gov from echurch@fnal.gov from dbox@fnal.gov
#
# Small subset of a script to run the optical library building job on the grid within larbatch infrastructure, modified by pkryczyn@fnal.gov
#
#
# To run this job:
#
# jobsub -X509_USER_PROXY /scratch/[user]/grid/[user].uboone.proxy -N [NoOfJobs] -q OpticalLibraryBuild_Grid.sh `whoami` `pwd`
#
# You will get outputs in the area specified by the "outstage" variable 
# which is specified below.
#
# The form of the output is one file for each few voxels. These then need 
# stitching together, which is done after all jobs are done, with a
# dedicated stitching script.
#

umask 0002
verbose=T

# launchN=5
# Njobs=5000 # 27115 in total, corresponds to numjobs in xml file. 
# NEWPROCESS=`echo "($launchN * $Njobs + $JOBSUBJOBSECTION - 1) " | bc`
# NEWPROCESS=`echo "($launchN * $Njobs + $PROCESS) " | bc`

LOOP=`echo "($JOBSUBJOBSECTION - 1) " | bc`

missing=(10064 10068 10069 10070 10101 10152 10177 10195 10210 10211 10418 10437 10445 10498 10596 10638 10656 10685 10713 10762 10785 10798 10833 10839 10843 10895 10896 10899 10903 10928 10936 10955 11013 11017 11051 11086 11089 11092 11131 11135 11166 11180 11194 11222 11225 11250 11251 11255 11278 11288 11300 11310 11327 11349 11367 11399 11401 11419 11437 11438 11446 11508 1152 11523 11533 11534 11561 11563 11564 1160 1164 1166 1168 1170 1178 11795 11796 11819 11820 11832 11883 11886 11887 1194 12044 12062 12122 12123 12124 12234 12235 12362 12363 12395 12396 12469 12511 12551 12553 12579 12580 12611 12612 1262 12648 12662 12669 12713 12715 12891 12956 12957 12958 12959 12964 12987 12989 13013 13061 13062 13100 13102 13103 13105 13265 13318 13344 13362 13363 13365 13366 13388 1339 13405 13428 13439 13458 13459 13501 13502 13503 13504 13505 13506 13507 13511 13515 1354 13570 13571 13575 1359 13609 13630 13631 1364 1369 13789 13819 1382 13857 13858 13859 13899 13900 13901 13912 13923 1393 13947 13948 13972 13996 13997 13998 1401 1404 14044 1408 14149 14191 14192 14232 14313 14314 14348 14349 14381 14382 14383 14421 14465 14490 14492 14520 14578 14687 14688 14720 14795 14848 14867 14894 14895 14909 14992 15038 15122 15256 15450 15504 15506 15564 15587 15590 15602 15649 15665 15682 15685 15686 15707 1571 15715 15716 15717 15718 1572 1573 15734 15735 1574 15741 15742 15752 15755 1576 15767 1577 15771 1578 15792 15793 1580 1581 15819 1582 15820 15824 1584 15841 15843 1585 1586 15867 1587 1588 15889 1589 1590 15902 1591 15911 15912 15913 15914 1592 1593 15930 15932 15933 15943 1595 15956 15963 15964 15966 16001 16011 16031 16033 16055 16062 16097 16098 16100 16135 16144 16165 16244 16292 16339 16374 16410 16480 16482 16483 16597 16598 16600 16700 16701 16705 16744 16840 16841 16913 16914 16916 16938 16939 16973 16996 16997 17008 17023 17045 17064 17073 17100 17101 17145 17191 17192 17368 17386 17390 17394 17420 17425 17426 17445 17447 17472 17473 17474 17517 17518 17560 17561 17639 17721 17723 17724 17725 17726 17727 17728 17730 17804 17807 17808 17831 17832 17883 17884 17885 17893 17894 17895 17897 17948 17950 18048 18053 18060 18077 18078 18079 18080 18081 18088 18196 18197 18198 18228 18231 18232 18311 18312 18334 18340 18361 18423 18454 18455 18456 18474 18475 18476 18614 18672 18684 18685 18686 18687 18697 18860 18861 18862 18865 18867 18931 18932 18934 18979 18980 19027 19054 19055 19085 19086 19104 19183 19208 19211 19240 19241 19261 19263 19312 19362 19406 19407 19429 19430 19431 19464 19519 19545 19555 19556 19558 19585 19627 19647 19648 19696 19748 19751 19752 19798 19839 19840 19876 19877 19878 19946 20002 20031 20177 20178 20181 20184 20215 20217 20220 20221 20230 20243 20244 20253 20266 20290 20291 20294 20295 20302 20318 20335 20337 20341 20343 20355 20370 20373 20381 20396 20400 2042 20423 20427 20440 20442 20444 20465 20467 20482 20516 20521 20536 20538 20540 20554 20557 20593 20605 20606 20608 20611 20612 20614 20647 20672 20676 20684 20685 20686 20702 20723 20724 20752 2076 20772 20794 20826 20838 2102 21059 21060 21090 2111 2114 21143 2120 21250 21298 21354 21355 21356 21465 21466 21520 21575 21576 21609 21610 21611 21612 21618 21624 21634 21695 21731 21762 2177 21792 21793 21822 21842 21843 21845 21998 22031 22032 22064 22099 22123 22124 22146 22169 22193 22195 22197 22201 22232 22234 22373 22411 22416 22447 22448 22516 22519 22522 22523 22527 22531 22532 22533 22534 22535 22537 22543 22583 22584 22585 2259 22602 22603 22604 22605 22606 22607 22608 22610 22611 22614 22619 2264 22667 22668 22669 22671 22672 22676 22680 22698 22780 22781 22782 22815 22831 22841 22842 2293 22958 22959 22960 22961 22962 22988 23072 23073 23074 23075 23078 23082 23142 23143 23178 23179 23180 23181 23182 23183 23208 23209 23210 23213 23292 23293 23294 23295 23310 23352 23377 23378 23410 23411 23412 23413 2347 23471 23472 23473 23538 23539 23654 23655 23715 23716 23770 23771 23772 23773 23774 23819 23820 23821 23862 23968 23970 24001 24025 24070 24109 24140 24158 24247 24304 24305 24342 24343 24364 24409 24442 24443 24444 24480 24510 24511 24512 24567 24568 24569 24619 24620 24673 24674 24675 24678 24679 24734 24735 24779 24780 24782 24966 24967 24968 24969 24970 24971 24972 24973 24974 24976 24977 24978 24986 24987 25014 25077 2511 25132 25149 25153 25219 25304 25394 25631 25775 25868 25871 25887 25929 25930 25935 25948 26123 26136 26157 2616 26224 26226 26227 26236 26237 26238 26239 26252 26288 26289 26322 26387 26404 26454 26459 26461 26600 26643 26689 26730 26814 26815 26819 26825 26827 26830 26831 26833 26836 26837 26838 26840 26843 26909 26920 26921 26930 26934 26937 26940 26942 26943 27078 27091 27108 27114 2722 2745 2757 2758 2759 2798 2935 2980 2985 2989 3036 3117 3160 3194 3238 3267 3334 3354 3360 3412 3423 3431 3452 3456 3480 3544 3546 3575 3601 3610 3612 3613 3624 3626 3679 3696 3698 3727 3768 3776 3785 3786 3800 3820 3822 3857 3870 3912 3913 3940 3952 3953 3955 4013 4020 4032 4096 4156 4260 4306 4359 4365 4393 4395 4399 4425 4426 4432 4530 4572 4621 4630 4787 4807 4847 4848 4880 4988 4989 4990 5473 5514 5567 5580 5600 5602 5604 5605 5606 5607 5631 5674 5679 5693 5719 573 5739 5821 590 603 6129 614 6161 617 6177 6198 6199 621 6225 6227 6228 6230 6232 6234 624 626 6298 6304 6351 6421 6425 6428 6430 6459 6492 6498 6532 6629 6654 6697 6736 6798 6799 6810 6825 6837 6855 6913 6914 6918 6963 7008 7012 7056 7057 7061 7098 7099 7102 7108 7109 7126 7129 7142 7165 7167 7181 7193 7222 7223 7244 7266 7296 7325 7327 7328 7329 7331 7345 7362 7366 7401 7402 7404 7426 7445 7447 7449 7472 7473 7494 7506 7516 7577 7578 7626 7651 7678 7680 7705 7724 7743 7811 7892 7924 8010 8028 8086 8102 8103 8190 8191 8260 8339 8340 8341 8376 8403 8404 8425 8435 8449 8476 8479 8504 8505 8514 8538 8564 8606 8607 8641 8811 8828 8829 8830 8831 8859 8860 8886 8904 8905 8906 8947 8948 8963 8993 8995 9076 9086 9087 9107 9126 9128 9163 9164 9182 9210 9211 9270 9282 9320 9326 9333 9372 9403 9443 9460 9488 9524 9559 9560 9600 9601 9602 9671 9672 9713 9714 9715 9740 9767 9799 9826 9921 9979 9980)

NEWPROCESS=${missing[$LOOP]}

# Copy arguments into meaningful names.
process=${NEWPROCESS}
cluster=${CLUSTER}


# Library building parameters

# In each grid job, do this many voxels:
NVoxelsPerJob=120

# In each voxel, run this many photons:
NPhotonsPerVoxel=500000

# The top voxel for the whole job +1.
NTopVoxel=3253801 

echo $FHICL_FILE_PATH "fhicl file path"
# This works out which voxels this job should focus on: 
FirstVoxel=`echo "($NVoxelsPerJob * $NEWPROCESS ) % $NTopVoxel" | bc`
LastVoxel=`echo "(($NVoxelsPerJob * $NEWPROCESS ) + $NVoxelsPerJob - 1 ) % $NTopVoxel" | bc`


# And then tell the user about it:
echo "This job will run from voxel $FirstVoxel to $LastVoxel, generating $NPhotonsPerVoxel in each"
echo "physics.producers.generator.FirstVoxel: $FirstVoxel" >> $FCL
echo "physics.producers.generator.LastVoxel: $LastVoxel" >> $FCL
echo "physics.producers.generator.N: $NPhotonsPerVoxel">> $FCL
echo "services.TFileService.fileName: \"${process}_hist.root\"" >> $FCL



