#!/bin/bash
#
# Author: bjpjones@fnal.gov from echurch@fnal.gov from dbox@fnal.gov
#
# Small subset of a script to run the optical library building job on the grid within larbatch infrastructure, modified by pkryczyn@fnal.gov
#
#
# To run this job:
#
# jobsub -X509_USER_PROXY /scratch/[user]/grid/[user].uboone.proxy -N [NoOfJobs] -q OpticalLibraryBuild_Grid.sh `whoami` `pwd`
#
# You will get outputs in the area specified by the "outstage" variable 
# which is specified below.
#
# The form of the output is one file for each few voxels. These then need 
# stitching together, which is done after all jobs are done, with a
# dedicated stitching script.
#

umask 0002
verbose=T

# launchN=5
# Njobs=5000 # 27115 in total, corresponds to numjobs in xml file. 
# NEWPROCESS=`echo "($launchN * $Njobs + $JOBSUBJOBSECTION - 1) " | bc`
# NEWPROCESS=`echo "($launchN * $Njobs + $PROCESS) " | bc`

LOOP=`echo "($JOBSUBJOBSECTION) " | bc`

missing=(10024 10025 10044 10074 10086 10092 10094 10096 10104 10106 10148 10159 10169 102 10251 10259 10284 10285 10290 10301 10314 10421 10424 10478 10497 10527 10547 10551 10565 10573 10576 10600 10619 10640 10648 10652 10685 107 10777 10793 10830 10874 10885 10933 10936 10959 10984 11029 11034 11040 11042 11063 1110 11118 11122 11124 11181 11233 11273 11281 11361 11368 11399 11400 11406 11417 11422 11509 11538 11539 1156 11575 11659 1167 11677 11717 11720 11741 11755 11770 11836 11864 11892 11967 12008 12016 12018 12037 12065 12117 1217 12172 12186 12200 12226 12227 12232 12241 12263 12275 12323 12349 12362 12414 12415 12470 12481 12483 12529 12595 12650 12692 12715 12733 1279 12803 1284 12850 12891 12914 12920 12928 1293 12946 12958 12979 13012 13053 13069 13078 1309 13110 13116 13143 13152 13168 13186 13194 13237 13306 134 13443 13447 13453 13495 13512 13577 13579 13583 13647 13665 13666 13697 1371 13778 13848 13856 13867 1390 13917 13947 13964 13971 13992 14050 14066 14109 1419 14201 14232 14258 14283 14305 14317 14320 14351 14366 14426 14490 14493 14517 14552 14587 1462 14693 14701 14703 14704 14738 14753 14757 14768 14807 14825 14862 14911 14946 14963 14974 15002 15005 15006 15029 15034 15086 15100 15115 15116 15117 15125 15130 15147 15159 15185 15202 15225 15278 15304 15321 15351 15356 15371 15405 15412 1543 15440 15463 15495 15560 15573 15581 15604 15611 15625 15693 15755 15791 158 15802 15843 15868 15888 16003 16022 16024 16047 16059 16065 16070 1608 16144 16192 16250 16260 16281 16332 16339 16359 16369 16402 16416 1642 16439 16480 16486 16502 16531 16554 16561 16573 16589 16686 16709 16772 16776 16806 16840 16861 16889 16896 16905 16915 16953 16969 16988 17000 17033 17036 17103 17105 1711 17129 17146 17186 17222 17245 1725 173 17321 17325 17333 17421 17446 17476 17479 17557 17571 17577 1760 17616 17665 17667 17669 17674 17685 17693 17698 17730 17755 17789 17793 1784 17847 17866 17990 18006 18014 18099 18108 18216 1832 18323 1838 18416 18438 18445 18465 18476 18544 18551 18555 18643 18659 18667 18694 18703 18726 1879 1884 18841 18846 18877 18886 18891 18894 18899 18944 18984 18991 19 19012 19025 1903 19053 19094 19101 19196 19197 19227 19280 19305 1931 19322 1934 19345 19346 19370 19386 19426 19438 19447 19475 19486 19503 19563 1958 19605 1963 19691 19719 19727 19790 19839 19866 19876 19878 19882 19905 19908 19912 19918 19919 19926 19945 1996 19966 19971 19979 20005 20009 20013 20078 20081 20136 20159 20195 20218 20224 20249 20288 20336 20345 20347 20351 20370 20377 20408 20419 20437 2044 20442 20500 20526 2054 20674 20690 2071 20726 20747 20826 20834 20842 20858 20876 209 20908 20954 20999 21008 2102 21024 21057 2107 21106 21127 21190 21200 21210 21230 21237 21239 2129 21348 21367 21391 21449 21469 21475 21476 21502 21573 21580 21589 21620 21671 21677 21697 21708 21709 21723 2173 2176 21763 2177 21788 21857 21887 21895 21909 21918 21921 2199 2200 22044 22101 22147 22178 22196 22198 22201 2224 22333 22336 22343 22378 22382 2239 2240 22408 22421 22451 22460 22465 22477 22483 22484 22513 2254 22546 22553 2256 22602 22606 22634 22637 22649 22665 22704 22711 22724 22727 22773 22780 22826 22828 22842 22856 22897 22908 22937 22968 22971 22984 23015 23077 23079 23088 23100 23107 23124 23141 23169 23204 23231 23250 23366 23385 23401 23428 23475 23497 23502 23546 23558 23574 23602 23608 23625 23652 23690 23694 23697 23715 23727 23735 23750 23769 23795 23823 23825 23838 23884 23923 23961 23988 24054 24080 24120 24153 2418 24213 24223 24300 24303 24318 2433 24340 24346 24358 2436 24369 24409 24457 24460 24478 24491 24496 24556 24558 24560 24577 24582 24588 24593 24605 24719 24758 24759 24772 24774 24798 24810 24827 2484 24849 24866 24872 24893 24904 24916 24992 2506 25075 25110 2512 25180 25183 25229 25231 25261 25273 25317 2536 25401 25410 25443 25481 2551 25517 25536 25564 25580 25588 25656 2566 25676 25697 2570 25754 25799 25808 25811 25823 25824 25831 25855 25966 25971 25985 26024 26212 26258 26263 263 26306 26307 26371 26408 26444 26518 26523 26552 26555 26562 26651 26656 2669 26735 26747 26777 26838 26853 26865 26873 26916 26919 26943 27009 27036 27069 27091 2710 2716 2846 2847 2867 2871 2873 2903 2940 2978 2980 3023 3052 3093 311 3127 3260 3267 3278 3312 3334 3338 3350 3366 3369 3414 3444 3496 3498 3513 3519 3544 3605 3647 3745 3769 3809 3880 3887 3891 3900 3908 3937 3947 3953 3974 3986 3997 400 4002 4029 403 4032 4054 4060 4101 4139 4148 4204 4209 4238 4304 431 4313 432 4351 4363 4372 4378 4385 4399 4405 4442 4471 4541 4571 4603 461 4618 4650 4651 466 4684 4704 4713 4784 4788 4816 4845 4869 4883 4934 4950 4957 4958 4974 4983 4990 5000 5005 5031 5097 510 5103 5243 5278 528 5310 5336 5346 5347 5352 5387 5397 5448 5489 5523 5536 5557 557 5605 5612 5627 5632 564 5670 5725 573 5733 5822 5837 5854 5890 5895 5930 5986 5997 6003 6019 6027 6044 6068 6070 6075 6097 6116 6119 6153 6195 6197 624 6258 6262 6272 6296 6297 6363 6369 6371 6392 6411 6425 6426 6464 6499 6503 6511 653 6556 6613 6626 6631 6637 6638 6648 6657 667 6676 6685 6695 6696 6734 6749 6798 682 6841 6867 6871 693 6933 6938 6947 6973 7004 7115 713 7136 7138 7184 7271 729 7297 7299 7360 7364 7368 7425 7455 7551 7578 7591 7629 7630 7639 7647 7655 768 7687 770 7732 7755 7757 7775 779 7858 7905 7909 7936 7965 80 800 8022 8031 8040 8042 8047 8059 8148 8171 8193 8203 8329 8344 835 8374 8421 847 8481 8510 852 8529 8561 8563 8636 8651 8706 872 8723 8756 8783 8827 883 8869 8875 8944 8966 9008 9012 9091 9108 9127 9130 9131 9197 9198 9205 9218 923 9231 9246 9253 9258 9280 932 9320 935 9369 9415 9419 9499 951 9550 9562 9588 9604 9707 9724 9775 979 9800 9818 9858 9862 9864 9947 9972 9994)
NEWPROCESS=${missing[$LOOP]}

# Copy arguments into meaningful names.
process=${NEWPROCESS}
cluster=${CLUSTER}


# Library building parameters

# In each grid job, do this many voxels:
NVoxelsPerJob=120

# In each voxel, run this many photons:
NPhotonsPerVoxel=500000

# The top voxel for the whole job +1.
NTopVoxel=3253801 

echo $FHICL_FILE_PATH "fhicl file path"
# This works out which voxels this job should focus on: 
FirstVoxel=`echo "($NVoxelsPerJob * $NEWPROCESS ) % $NTopVoxel" | bc`
LastVoxel=`echo "(($NVoxelsPerJob * $NEWPROCESS ) + $NVoxelsPerJob - 1 ) % $NTopVoxel" | bc`


# And then tell the user about it:
echo "This job will run from voxel $FirstVoxel to $LastVoxel, generating $NPhotonsPerVoxel in each"
echo "physics.producers.generator.FirstVoxel: $FirstVoxel" >> $FCL
echo "physics.producers.generator.LastVoxel: $LastVoxel" >> $FCL
echo "physics.producers.generator.N: $NPhotonsPerVoxel">> $FCL
echo "services.TFileService.fileName: \"${process}_hist.root\"" >> $FCL



